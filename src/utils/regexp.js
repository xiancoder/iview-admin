/* ================================================================================*\
*  |说明|_Regexp_正则 测试 TEST
*  |说明|源头
\*================================================================================ */
// 制作正则表达式
function createRegexp (op) {
    let args = Array.prototype.slice.call(arguments, 0)
    op = op || ''
    let regText = args.join('')
    return {
        g: new RegExp(regText, 'g'),
        gi: new RegExp(regText, 'gi'),
        i: new RegExp(regText, 'i'),
        no: new RegExp(regText, '')
    }
}
export default {
    n01: createRegexp('^[\u4E00-\u9FA5]+$', 'g'), // 纯中文
    n02: /^[\u4E00-\u9FA5\uF900-\uFA2D]+$/, // 纯中文
    n03: /^[\u4e00-\u9fa5]{1}[A-Z]{1}[A-Z_0-9]{5}$/, // 车牌号
    n04: /^[a-zA-Z]+$/, // 大小写字母
    n05: /^[0-9]+$/, // 数字`11``
    n06: /^<\/?[^>]+>$/, // 标签
    n07: /^[A-Za-z0-9](([_\.\+\-]?[a-zA-Z0-9]+)*)@([A-Za-z0-9]+)(([\.\-]?[a-zA-Z0-9]+)*)\.([A-Za-z]{2,})$/, // 邮箱
    n08: /^[\w-]+(\.[\w-]+)*@[\w-]+(\.[\w-]+)+$/, // 邮箱
    n09: /^http[s]?:\/\/([\w-]+\.)+[\w-]+([\w-.\/?%&=]*)?$/, // 网址
    n10: /^[a-zA-z]+:\/\/(\w+(-\w+)*)(\.(\w+(-\w+)*))*(\?\S*)?$/, // 网址
    n11: /^(13[0-9]|14[0-9]|15[0|1|2|3|5|6|7|8|9]|17[0-9]|18[0-9])\d{8}$/, // 手机号码
    n12: /^(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)\.(25[0-5]|2[0-4]\d|[0-1]\d{2}|[1-9]?\d)$/, // IP地址
    n13: /^(\d+)\.(\d+)\.(\d+)\.(\d+)/, // IP地址
    n14: /^(([0\+]\d{2,3})?-?(0\d{2,3}))?-?(\d{7,8})(-(\d{3,}))?$/, // 区号 电话
    n15: /^\d{6}$/, // 邮编
    n16: /^(.*)\.(jpg|bmp|gif|ico|pcx|jpeg|tif|png|raw|tga)$/, // 图片格式
    n17: /^(.*)\.(rar|zip|7zip|tgz)$/, // 压缩包
    n18: /^\d{4}(\-|\/|\.)\d{1,2}\1\d{1,2}$/, // 日期格式
    n19: /^[1-9]*[1-9][0-9]$/, // QQ
    n20: /^(h|H)(r|R)(e|E)(f|F) *= *(\'|\")?(\w|\\|\/|\.)+(\'|\"| *|>)?$/, // href = 123
    n21: /^(s|S)(r|R)(c|C) *= *(\'|\")?(\w|\\|\/|\.)+(\'|\"| *|>)?$/, // src = 123
    n22: /^[\u4e00-\u9fa5_a-zA-Z0-9\@\.|_]+$/, // 用户名

    // 以下已经投入使用
    a01: /^(([1-9][0-9]*)|(([0]\.\d{1,2}|[1-9][0-9]*\.\d{1,2})))$/, // 匹配整数，小数限2位
    a02: /^((0\.([1-9](\d)?|[0][1-9]))|([1-9]([0-9]{1,5})?(\.\d{1,2})?)?)?$/, // 匹配整数限6位，小数限2位（不含0）
    a03: /(^[1-9]\d{0,5}(\.\d{1,2})?$)|(^0$)|(^\d\.\d{1,2}$)/, // 匹配整数限6位，小数限2位（包含0）
    a04: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/, // 15或18位 身份证号
    a05: /^[1][2-9][0-9]{9}$/, // 广义范围手机号

    // 以下已经投入使用 (配合表单校验)(不管长度)
    // 注意不要写g
    // b01: /^[0-9a-zA-Z]+[0-9]+[a-zA-Z]+[0-9]*$/, // 密码-可用数字字母 需同时包含 不好维护 废弃
    b01: /[a-zA-Z]/, // 大小写字母
    b02: /[0-9]/, // 数字
    b03: /[\~\!\@\#\$\%\^\&\*\(\)\_\+\`\-\=\[\]\;\'\,\.\/\\\<\>\?\:\"\{\}\|]/, // 规定标点符号
    b04: /^[a-zA-Z0-9]+$/, // 只能用数字字母

    // --------------
    end: null
}
